#!/bin/bash

# Fail script if any command fails.
set -e

# Print usage function.
printUsage() {
cat <<EOF
Usage: $(basename "${0}") [options]
Options:
  [-d|--debug]
  [-h|--help]
EOF
}

# Traps
# shellcheck disable=SC2154
trap 'return_code=${?}; trap - EXIT; echo EXIT ${return_code}' EXIT
trap 'return_code=${?}; trap - EXIT; echo HUP ${return_code}' HUP
trap 'return_code=${?}; trap - EXIT; echo INT ${return_code}' INT
trap 'return_code=${?}; trap - EXIT; echo QUIT ${return_code}' QUIT
trap 'return_code=${?}; trap - EXIT; echo PIPE ${return_code}' PIPE
trap 'return_code=${?}; trap - EXIT; echo TERM ${return_code}' TERM
trap 'trap - EXIT; echo SIGINT' SIGINT
trap 'trap - EXIT; echo SIGQUIT' SIGQUIT

# Get script path and append it to PATH so other scripts are callable.
script_path="$(dirname "$(readlink "${0}")")"
PATH="${PATH}:${script_path}"

# Parse arguments.
while [[ ${#} -ge 1 ]]; do
  # Debug mode
  if [[ "${1}" == "-d" || "${1}" == "--debug" ]]; then
    shift
    set -x
    continue
  fi
  # Help: display usage
  if [[ "${1}" == "-h" || "${1}" == "--help" ]]; then
    shift
    printUsage
    exit 0
  fi
  # Unrecognized argument.
  printf "\e[1m\e[31mERROR: Unrecognized argument %s.\e[0m\e[0m\n" "${1}" >&2
  printUsage
  exit 1
done

wallpapers_path="$(readlink "/home/andrei/wallpapers")"

# timers=(1s 2s 4s 8s 16s 32s 60s 2m 4m 8m 16m 32m 1h 2h 4h 8h 16h 1d)
timers=(1d)
while true; do
  wallpapers=$(find "${wallpapers_path}" -type f | sort -V)
  wallpaper_count="$(echo "${wallpapers}" | wc -l)"
  random=$((RANDOM % wallpaper_count + 1))
  wallpaper=$(echo "${wallpapers}" | head -n "${random}" | tail -n 1)
  gsettings set org.gnome.desktop.background picture-uri "file://${wallpaper}"
  # feh --bg-scale "${wallpaper}"
  set +e
  wal -i "${wallpaper}" -t
  set -e
  sleep "${timers[0]}"
  if [[ ${#timers[@]} -ge 2 ]]; then
    timers=("${timers[@]:1}")
  fi
done

